export default ["constructor(address factory, address factoryV1, address legacyFactory, address legacyRouter, address wnative)","error AddressHelper__CallFailed()","error AddressHelper__NonContract()","error JoeLibrary__InsufficientAmount()","error JoeLibrary__InsufficientLiquidity()","error LBRouter__AmountSlippageBPTooBig(uint256 amountSlippage)","error LBRouter__AmountSlippageCaught(uint256 amountXMin, uint256 amountX, uint256 amountYMin, uint256 amountY)","error LBRouter__BinReserveOverflows(uint256 id)","error LBRouter__BrokenSwapSafetyCheck()","error LBRouter__DeadlineExceeded(uint256 deadline, uint256 currentTimestamp)","error LBRouter__FailedToSendNATIVE(address recipient, uint256 amount)","error LBRouter__IdDesiredOverflows(uint256 idDesired, uint256 idSlippage)","error LBRouter__IdOverflows(int256 id)","error LBRouter__IdSlippageCaught(uint256 activeIdDesired, uint256 idSlippage, uint256 activeId)","error LBRouter__InsufficientAmountOut(uint256 amountOutMin, uint256 amountOut)","error LBRouter__InvalidTokenPath(address wrongToken)","error LBRouter__InvalidVersion(uint256 version)","error LBRouter__LengthsMismatch()","error LBRouter__MaxAmountInExceeded(uint256 amountInMax, uint256 amountIn)","error LBRouter__NotFactoryOwner()","error LBRouter__PairNotCreated(address tokenX, address tokenY, uint256 binStep)","error LBRouter__SenderIsNotWNATIVE()","error LBRouter__SwapOverflows(uint256 id)","error LBRouter__TooMuchTokensIn(uint256 excess)","error LBRouter__WrongAmounts(uint256 amount, uint256 reserve)","error LBRouter__WrongNativeLiquidityParameters(address tokenX, address tokenY, uint256 amountX, uint256 amountY, uint256 msgValue)","error LBRouter__WrongTokenOrder()","error TokenHelper__TransferFailed()","function addLiquidity((address tokenX, address tokenY, uint256 binStep, uint256 amountX, uint256 amountY, uint256 amountXMin, uint256 amountYMin, uint256 activeIdDesired, uint256 idSlippage, int256[] deltaIds, uint256[] distributionX, uint256[] distributionY, address to, address refundTo, uint256 deadline) liquidityParameters) returns (uint256 amountXAdded, uint256 amountYAdded, uint256 amountXLeft, uint256 amountYLeft, uint256[] depositIds, uint256[] liquidityMinted)","function addLiquidityNATIVE((address tokenX, address tokenY, uint256 binStep, uint256 amountX, uint256 amountY, uint256 amountXMin, uint256 amountYMin, uint256 activeIdDesired, uint256 idSlippage, int256[] deltaIds, uint256[] distributionX, uint256[] distributionY, address to, address refundTo, uint256 deadline) liquidityParameters) payable returns (uint256 amountXAdded, uint256 amountYAdded, uint256 amountXLeft, uint256 amountYLeft, uint256[] depositIds, uint256[] liquidityMinted)","function createLBPair(address tokenX, address tokenY, uint24 activeId, uint16 binStep) returns (address pair)","function getFactory() view returns (address lbFactory)","function getIdFromPrice(address pair, uint256 price) view returns (uint24)","function getLegacyFactory() view returns (address legacyLBfactory)","function getLegacyRouter() view returns (address legacyRouter)","function getPriceFromId(address pair, uint24 id) view returns (uint256)","function getSwapIn(address pair, uint128 amountOut, bool swapForY) view returns (uint128 amountIn, uint128 amountOutLeft, uint128 fee)","function getSwapOut(address pair, uint128 amountIn, bool swapForY) view returns (uint128 amountInLeft, uint128 amountOut, uint128 fee)","function getV1Factory() view returns (address factoryV1)","function getWNATIVE() view returns (address wnative)","function removeLiquidity(address tokenX, address tokenY, uint16 binStep, uint256 amountXMin, uint256 amountYMin, uint256[] ids, uint256[] amounts, address to, uint256 deadline) returns (uint256 amountX, uint256 amountY)","function removeLiquidityNATIVE(address token, uint16 binStep, uint256 amountTokenMin, uint256 amountNATIVEMin, uint256[] ids, uint256[] amounts, address to, uint256 deadline) returns (uint256 amountToken, uint256 amountNATIVE)","function swapExactNATIVEForTokens(uint256 amountOutMin, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) payable returns (uint256 amountOut)","function swapExactNATIVEForTokensSupportingFeeOnTransferTokens(uint256 amountOutMin, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) payable returns (uint256 amountOut)","function swapExactTokensForNATIVE(uint256 amountIn, uint256 amountOutMinNATIVE, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) returns (uint256 amountOut)","function swapExactTokensForNATIVESupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMinNATIVE, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) returns (uint256 amountOut)","function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) returns (uint256 amountOut)","function swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) returns (uint256 amountOut)","function swapNATIVEForExactTokens(uint256 amountOut, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) payable returns (uint256[] amountsIn)","function swapTokensForExactNATIVE(uint256 amountNATIVEOut, uint256 amountInMax, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) returns (uint256[] amountsIn)","function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, (uint256[] pairBinSteps, uint8[] versions, address[] tokenPath) path, address to, uint256 deadline) returns (uint256[] amountsIn)","function sweep(address token, address to, uint256 amount)","function sweepLBToken(address lbToken, address to, uint256[] ids, uint256[] amounts)","receive() payable"]